// <auto-generated />
using System;
using InventoryService.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InventoryService.API.Infrastructure.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InventoryService.API.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("EventId")
                        .HasColumnType("integer")
                        .HasColumnName("event_id");

                    b.Property<Guid>("GameItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("gameItem_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("item_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("InventoryService.API.Models.ItemPiece", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("EventId")
                        .HasColumnType("integer")
                        .HasColumnName("event_id");

                    b.Property<Guid>("GameItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("item_id");

                    b.Property<Guid>("ItemPieceId")
                        .HasColumnType("uuid")
                        .HasColumnName("itemPiece_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("piece_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("item_piece", (string)null);
                });

            modelBuilder.Entity("InventoryService.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("InventoryService.API.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("EventId")
                        .HasColumnType("integer")
                        .HasColumnName("event_id");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expire_date");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("VoucherId")
                        .HasColumnType("integer")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id")
                        .HasName("voucher_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("voucher", (string)null);
                });

            modelBuilder.Entity("InventoryService.API.Models.Item", b =>
                {
                    b.HasOne("InventoryService.API.Models.User", null)
                        .WithMany("Items")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("InventoryService.API.Models.ItemPiece", b =>
                {
                    b.HasOne("InventoryService.API.Models.User", null)
                        .WithMany("ItemPieces")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("InventoryService.API.Models.Voucher", b =>
                {
                    b.HasOne("InventoryService.API.Models.User", null)
                        .WithMany("Vouchers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("InventoryService.API.Models.User", b =>
                {
                    b.Navigation("ItemPieces");

                    b.Navigation("Items");

                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
